/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import ij.IJ;
import static ij.IJ.getClassLoader;
import static ij.IJ.getImage;
import static ij.IJ.selectWindow;
import ij.ImagePlus;
import ij.Prefs;
import ij.WindowManager;
import ij.plugin.frame.RoiManager;
import java.awt.Button;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Label;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFrame;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import static java.lang.System.in;
import java.net.URL;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.filechooser.FileNameExtensionFilter;
//import pimpathon.FileUtils;
import sun.misc.IOUtils;
import weka.core.PropertyPath.Path;

/**
 *
 * @author usuario
 */
public class My_Plugin_ extends JFrame {
    public String bellow;
    public String image;
    private Object directory;
    private ij.ImagePlus imp;
    private String path;
    private String name;
    private Button Open;
    FileOutputStream fop = null;
    File file;
    private String name1;
    private String name2;
    private Object FileConverter;
    public String prova;
    public String valor1;
    public String valor2;
    public String text;
    public String absolutePath;
    public String tempFilePath;
    private Object interval;
    private ArrayList<String> list = new ArrayList<String>();
    public String liststring;
    private ArrayList<String> list1 = new ArrayList<String>();
    public String text1;

    public void run(String arg) {
        //IJ.showMessage("thanks for using Mitochondria Morphology plugin ");
        Class<?> clazz = My_Plugin_.class;
        String url = clazz.getResource("/" + clazz.getName().replace('.', '/') + ".class").toString();
        String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
        System.setProperty("plugins.dir", pluginsDir);
        IJ.runPlugIn(clazz.getName(), "");
    }

    /**
     * Creates new form My_Plugin
     */
    public My_Plugin_() {
        super("MITOsize");
        initComponents();
        /*slider1.setMajorTickSpacing(1);
         slider1.setMinorTickSpacing(0);
         slider1.setExtent(20);
         slider1.setPaintTicks(true);
         slider1.setPaintLabels(true);*/
        
        thresholdd.setOpaque(true);
        interval4.setOpaque(true);
        thresholdd1.setOpaque(true);
        interval3.setEditable(true);
        interval2.setEditable(true);
        editor.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
        editor.setEditable(false);
        editor.setOpaque(false);
        editor.setText("Welcome to <a href='http://www.uab.cat/web/universitat-autonoma-de-barcelona-1345467954409.html'>UAB homepage</a> & to <a href='inc.uab.cat/English/index.php#!/Jesus'>Systems pharmacology and bioinformatics lab homepage</a>. ");
        editor.addHyperlinkListener(new HyperlinkListener() {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent hle) {
                if (HyperlinkEvent.EventType.ACTIVATED.equals(hle.getEventType())) {
                    System.out.println(hle.getURL());
                    Desktop desktop = Desktop.getDesktop();
                    try {
                        desktop.browse(hle.getURL().toURI());
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jDialog1 = new javax.swing.JDialog();
        jButton14 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtdirecotry = new javax.swing.JTextField();
        txtdirecotry2 = new javax.swing.JTextField();
        txtdata3 = new javax.swing.JTextField();
        label2 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        editor = new javax.swing.JEditorPane();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        slidernew = new javax.swing.JSlider();
        jButton13 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        thresholdd1 = new javax.swing.JTextField();
        threshold = new javax.swing.JCheckBox();
        interval4 = new javax.swing.JTextField();
        thresholdd = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        panelslider = new javax.swing.JPanel();
        interval3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        interval2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        obj4 = new javax.swing.JCheckBox();
        obj3 = new javax.swing.JCheckBox();
        obj1 = new javax.swing.JCheckBox();
        obj5 = new javax.swing.JCheckBox();
        obj2 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu9 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        empty = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton14.setText("Display the mitochondria within size interval");
        jButton14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBox1.setText("jCheckBox1");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/directory.png"))); // NOI18N
        jButton2.setText("Your folder for output");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/load.png"))); // NOI18N
        jButton1.setText("Load Image");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton3.setText("Display all mitochondria within your selection");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtdirecotry.setEditable(false);
        txtdirecotry.setBackground(new java.awt.Color(255, 255, 255));
        txtdirecotry.setForeground(new java.awt.Color(153, 153, 153));
        txtdirecotry.setText("(Your directory file output)");
        txtdirecotry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirecotryActionPerformed(evt);
            }
        });

        txtdirecotry2.setEditable(false);
        txtdirecotry2.setBackground(new java.awt.Color(255, 255, 255));
        txtdirecotry2.setForeground(new java.awt.Color(153, 153, 153));
        txtdirecotry2.setText("(Your image input)");
        txtdirecotry2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirecotry2ActionPerformed(evt);
            }
        });

        txtdata3.setEditable(false);
        txtdata3.setBackground(new java.awt.Color(255, 255, 255));
        txtdata3.setForeground(new java.awt.Color(153, 153, 153));
        txtdata3.setText("(Your file has been saved in ...)");
        txtdata3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdata3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtdirecotry, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtdirecotry2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtdata3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtdata3, txtdirecotry});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtdirecotry2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtdirecotry, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtdata3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(203, 203, 203))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtdata3, txtdirecotry});

        label2.setText("Mitochondria  identification & quantification by Agustin Bruzzese Novoa & James Dalton");

        jScrollPane1.setViewportView(editor);

        jLabel3.setText("   UAB");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/machine.png"))); // NOI18N
        jButton8.setText("Mitochondrial classification with Machine Learning ");
        jButton8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Untitled-4.png"))); // NOI18N
        jButton12.setText("Clear Results");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        slidernew.setMajorTickSpacing(1);
        slidernew.setMaximum(120);
        slidernew.setMinimum(15);
        slidernew.setMinorTickSpacing(5);
        slidernew.setPaintTicks(true);
        slidernew.setSnapToTicks(true);
        slidernew.setToolTipText("");
        slidernew.setValue(15);
        slidernew.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slidernewslider(evt);
            }
        });
        slidernew.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slidernewMouseDragged(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton13.setText("Display mitochondria above/below size threshold");
        jButton13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        thresholdd1.setBackground(new java.awt.Color(232, 232, 232));
        thresholdd1.setForeground(new java.awt.Color(153, 153, 153));
        thresholdd1.setText("pixels");
        thresholdd1.setBorder(null);
        thresholdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdd1ActionPerformed(evt);
            }
        });
        thresholdd1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdd1newslider(evt);
            }
        });

        threshold.setSelected(true);
        threshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdActionPerformed(evt);
            }
        });

        interval4.setBackground(new java.awt.Color(232, 232, 232));
        interval4.setForeground(new java.awt.Color(153, 153, 153));
        interval4.setText("20.000");
        interval4.setBorder(null);
        interval4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval4ActionPerformed(evt);
            }
        });
        interval4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                newslider(evt);
            }
        });

        thresholdd.setBackground(new java.awt.Color(232, 232, 232));
        thresholdd.setForeground(new java.awt.Color(153, 153, 153));
        thresholdd.setText(" Your threshold is above ");
        thresholdd.setBorder(null);
        thresholdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholddActionPerformed(evt);
            }
        });
        thresholdd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholddnewslider(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(threshold)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(interval4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(interval4)
                    .addComponent(thresholdd)
                    .addComponent(threshold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(thresholdd1))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jButton13)
                .addContainerGap(327, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slidernew, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(slidernew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Threshold Selector", jPanel3);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton11.setText("Display the mitochondria within size interval");
        jButton11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelsliderLayout = new javax.swing.GroupLayout(panelslider);
        panelslider.setLayout(panelsliderLayout);
        panelsliderLayout.setHorizontalGroup(
            panelsliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
        );
        panelsliderLayout.setVerticalGroup(
            panelsliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        interval3.setForeground(new java.awt.Color(153, 153, 153));
        interval3.setText("20.000");
        interval3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Lower pixel limit ");

        interval2.setForeground(new java.awt.Color(153, 153, 153));
        interval2.setText("1.000E16");
        interval2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Upper pixel limit");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(interval2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(interval3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelslider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(interval3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(interval2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(panelslider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Range selection", jPanel1);

        jDesktopPane2.setBackground(new java.awt.Color(232, 232, 232));
        jDesktopPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        obj4.setSelected(true);
        obj4.setText("fit ellipse");
        obj4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obj4ActionPerformed(evt);
            }
        });

        obj3.setSelected(true);
        obj3.setText("perimeter");

        obj1.setSelected(true);
        obj1.setText("area");
        obj1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obj1ActionPerformed(evt);
            }
        });

        obj5.setSelected(true);
        obj5.setText("shape descriptions");

        obj2.setSelected(true);
        obj2.setText("centroid");

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(obj1)
                    .addComponent(obj2)
                    .addComponent(obj3)
                    .addComponent(obj4)
                    .addComponent(obj5))
                .addContainerGap())
        );

        jDesktopPane2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {obj1, obj2, obj3, obj4, obj5});

        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(obj1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj5)
                .addContainerGap())
        );

        jDesktopPane2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {obj1, obj2, obj3, obj4, obj5});

        jDesktopPane2.setLayer(obj4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(obj3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(obj1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(obj5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(obj2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Output Settings", jDesktopPane2);

        jMenu9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/instruc.png"))); // NOI18N
        jMenu9.setText("Instructions ");
        jMenu9.setAlignmentX(1.0F);
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenu9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu9ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu9);

        jMenu11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/load.png"))); // NOI18N
        jMenu11.setText("Load sample");
        jMenu11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu11MouseClicked(evt);
            }
        });
        jMenu11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu11ActionPerformed(evt);
            }
        });

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Load astrocytes image 1º");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem9);

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem14.setText("Load astrocytes image 2º");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem14);

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem15.setText("Load astrocytes image 3º");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem15);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem16.setText("Load U2OS human cell image 1º");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem16);

        jMenuItem17.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem17.setText("Load U2OS human cell image 2º");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem17);

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem18.setText("Load U2OS human cell image 3º");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem18);

        jMenuBar1.add(jMenu11);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/options.png"))); // NOI18N
        jMenu1.setText("Selection Tool");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/options.png"))); // NOI18N
        jMenuItem1.setText("Free hand Selection ");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/options.png"))); // NOI18N
        jMenuItem2.setText("Rectangular Selection ");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tools.png"))); // NOI18N
        jMenu7.setText("Options");
        jMenu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu7MouseClicked(evt);
            }
        });
        jMenu7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu7ActionPerformed(evt);
            }
        });

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trash.png"))); // NOI18N
        jMenuItem10.setText("Clear Selection");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        jMenuItem11.setText("Return Previous Selection ");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all.png"))); // NOI18N
        jMenuItem12.setText("Select All");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem12);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jMenuItem13.setText("Roi Manager");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem13);

        jMenuBar1.add(jMenu7);

        empty.setText("                                                   ");
        empty.setEnabled(false);
        jMenuBar1.add(empty);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Untitled-4.png"))); // NOI18N
        jMenu2.setText("Close Plugin ");
        jMenu2.setAlignmentX(1.0F);
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(409, 409, 409))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(581, 581, 581))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        IJ.setTool("rectangle");// TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        IJ.setTool("rectangle");     // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        IJ.showMessage("With this plugin you will be able to identify all mitochondrias bodies in your image. "
                + "\nIn this plugin, you can also get and aproximation representation of the diferent morphologies "
                + "\nwith the specific morphologies bottom, we strongly recomend to classify your data base on the "
                + "\nmachine learning option we attach. For any question or suggestion contact us in this email"
                + "\nbruzzese.agustin@gmail.com");    // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu9MouseClicked

    private void jMenu9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu9ActionPerformed
        IJ.showMessage("MITOsize is a complete free open source plugin for Fiji made by scientist for scientist. With this \nplugin, the user will be able to process, identify & classify mitochondrial images. Currently \n you are in the main interface, in which we provide a complete, easy to follow, buttons to \n process and identify mitochondrial structures. All the [Display…] buttons were optimized with\n three image functions that make the identification possible. Meanwhile [Display all \n mitochondria within your selection] displays mitochondrial structures using our experimental \n range. Also, we develop additional options to select, tune scales, size or threshold and \n output parameters, in order to make this plugin as flexible and easy to work with as we can."
+"\n We strongly recommend classifying your data output with the machine learning option we \n attach, [Mitochondrial classification with Machine Learning]. For any question or suggestion \n contact us in this email bruzzese.agustin@gmail.com"
+"");    
    }//GEN-LAST:event_jMenu9ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        setVisible(false);
        dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void txtdirecotry2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirecotry2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirecotry2ActionPerformed

    private void txtdirecotryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirecotryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirecotryActionPerformed

    private void jMenu7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu7ActionPerformed

    private void jMenu7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu7MouseClicked

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        IJ.run(imp, "Select All", "");        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        IJ.run("Restore Selection", "");        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        IJ.run(this.imp, "Select None", "");        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        IJ.run("Clear Results");
        IJ.run("Clear Results");
        IJ.run("Close All", "");

        if (WindowManager.getFrame("Results") != null) {
            IJ.selectWindow("Results");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("Summary") != null) {
            IJ.selectWindow("Summary");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("Results") != null) {
            IJ.selectWindow("Results");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("ROI Manager") != null) {
            IJ.selectWindow("ROI Manager");
            IJ.run("Close");
        }
        IJ.run("Close All", "roiManager");// TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String prova = IJ.getFilePath("");
        IJ.open(prova);

        this.name2 = getImage().getTitle();

        txtdirecotry2.setText(this.name2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         IJ.run("Clear Results");
        selectWindow(this.name2);
        this.name2 = IJ.getImage().getTitle();
        this.name2 = this.name2.replaceFirst("[.][^.]+$", "");
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        IJ.run("Set Measurements...", "area shape fit redirect=None decimal=5");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        IJ.run("Analyze Particles...", "size=20.00-1.000E16 pixel show=Outlines display include summarize add");
        IJ.saveAs("tif", this.path + File.separator + this.name2+ "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        txtdata3.setText(this.path + File.separator + dest_filename2);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to classify your results with our machin learning model of classification?", "Machine learning", dialogButton, JOptionPane.WARNING_MESSAGE);
        if (dialogResult == 0) {
            Class<?> clazz = classificationPLugin.class;
        String url = clazz.getResourceAsStream("/" + clazz.getName().replace('.', '/') + ".class").toString();
        String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
        System.setProperty("plugins.dir", pluginsDir);
        IJ.runPlugIn(clazz.getName(), "");
            classificationPLugin nf1 = new classificationPLugin();
            classificationPLugin.txtdirecotry2.setText(this.txtdata3.getText());
            nf1.setVisible(true);

        } else {
            System.out.println("No Option");

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Class<?> clazz = A_MachineLearningMenu.class;
        String url = clazz.getResourceAsStream("/" + clazz.getName().replace('.', '/') + ".class").toString();
        String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
        System.setProperty("plugins.dir", pluginsDir);
        IJ.runPlugIn(clazz.getName(), "");
        new A_MachineLearningMenu();
        new A_MachineLearningMenu().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser(".");
        chooser.setApproveButtonText("OK");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        Component fileChooserDialog = null;
        chooser.showOpenDialog(fileChooserDialog);
        this.path = chooser.getSelectedFile().getAbsolutePath();
        txtdirecotry.setText(chooser.getSelectedFile().getName());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void obj1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj1ActionPerformed

    private void obj4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
 
        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj1.isSelected()) {
            this.list.add("area");
        }

        if (obj2.isSelected()) {
            this.list.add("centroid");
        }
        if (obj3.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj4.isSelected()) {
            this.list.add("fit");
        }
        if (obj5.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval3.getText();
        this.valor2 = this.interval2.getText();
        this.text = "size=" + this.valor1 + "-" + this.valor2 + " pixel show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text);
        IJ.saveAs("tif", this.path + File.separator + this.name2 + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        txtdirecotry2.setText(this.name2);
        IJ.run("Clear Results");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void interval2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval2ActionPerformed

    }//GEN-LAST:event_interval2ActionPerformed

    private void interval3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval3ActionPerformed

    private void thresholddnewslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholddnewslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholddnewslider

    private void thresholddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholddActionPerformed

    private void newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_newslider
        /*if (threshold.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd.setText("Your threshold is above "+interval4.getText()+" pixels");
        } else {
            thresholdd.setText("Your threshold is bellow "+interval4.getText()+" pixels");
        }*/
    }//GEN-LAST:event_newslider

    private void interval4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval4ActionPerformed

    private void thresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdActionPerformed
        if (threshold.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd.setText("Your threshold is above ");
        } else {
            thresholdd.setText("Your threshold is below");
        }
    }//GEN-LAST:event_thresholdActionPerformed

    private void thresholdd1newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdd1newslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd1newslider

    private void thresholdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd1ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
 
        if (threshold.isSelected()) {
            //this.list1.add(sfsfsa);
            this.bellow = interval4.getText() + " - 1.000E16 pixel";
            System.out.println(bellow);
        } else {
            this.bellow = "15.00 - " + interval4.getText();
            System.out.println(bellow);
        }

        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj1.isSelected()) {
            this.list.add("area");
        }

        if (obj2.isSelected()) {
            this.list.add("centroid");
        }
        if (obj3.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj4.isSelected()) {
            this.list.add("fit");
        }
        if (obj5.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval3.getText();
        this.valor2 = this.interval2.getText();
        this.text1 = "size=" + this.bellow + "show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text1);
        IJ.saveAs("tif", this.path + File.separator + this.name2+ "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        IJ.run("Clear Results");
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void slidernewMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slidernewMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_slidernewMouseDragged

    private void slidernewslider(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidernewslider
        interval4.setText(Integer.toString(slidernew.getValue()));
        System.out.println(Integer.toString(slidernew.getValue()));
    }//GEN-LAST:event_slidernewslider

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        try {
            InputStream inputStream = getClass().getResourceAsStream("/sample3.png");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed

        try {
            InputStream inputStream = getClass().getResourceAsStream("/sample2.png");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed

        try {
            InputStream inputStream = getClass().getResourceAsStream("/sample4.png");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenu11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu11MouseClicked

    private void jMenu11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu11ActionPerformed
        new sample1();
        new sample1().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj1.isSelected()) {
            this.list.add("area");
        }

        if (obj2.isSelected()) {
            this.list.add("centroid");
        }
        if (obj3.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj4.isSelected()) {
            this.list.add("fit");
        }
        if (obj5.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval3.getText();
        this.valor2 = this.interval2.getText();
        this.text = "size=" + this.valor1 + "-" + this.valor2 + " pixel show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text);
        IJ.saveAs("tif", this.path + File.separator + this.name2 + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed

        try {
            InputStream inputStream = getClass().getResourceAsStream("/U2OShumancell1.jpg");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed

        try {
            InputStream inputStream = getClass().getResourceAsStream("/U2OShumancell2.jpg");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed

        try {
            InputStream inputStream = getClass().getResourceAsStream("/U2OShumancell3.jpg");
            File tempFile = File.createTempFile("sample", ".png");
            copyFile(inputStream, new FileOutputStream(tempFile));
            this.absolutePath = tempFile.getAbsolutePath();
            System.out.println("hola :" + this.absolutePath);
            this.tempFilePath = absolutePath.substring(0, absolutePath.lastIndexOf(absolutePath));
            System.out.println("chau :" + this.tempFilePath);

        } catch (IOException e) {
            throw new RuntimeException("Can't create temp file ", e);
        }
        IJ.open(this.absolutePath);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void txtdata3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdata3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdata3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        IJ.setTool("freehand");  // TODO add your handling code here:          // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        IJ.setTool("freehand");  // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1MouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(My_Plugin_.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(My_Plugin_.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(My_Plugin_.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(My_Plugin_.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Class<?> clazz = My_Plugin_.class;
                String url = clazz.getResource("/" + clazz.getName().replace('.', '/') + ".class").toString();
                String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);

                System.setProperty(
                        "plugins.dir", pluginsDir);
                IJ.runPlugIn(clazz.getName(), "");
                new ij.ImageJ();

                new My_Plugin_()
                        .run("");
                new My_Plugin_()
                        .setVisible(true);
                //IJ.showMessage("thanks for using Mitochondria Morphology plugin ");

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editor;
    private javax.swing.JMenu empty;
    public static javax.swing.JTextField interval2;
    public static javax.swing.JTextField interval3;
    public static javax.swing.JTextField interval4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Label label2;
    private javax.swing.JCheckBox obj1;
    private javax.swing.JCheckBox obj2;
    private javax.swing.JCheckBox obj3;
    private javax.swing.JCheckBox obj4;
    private javax.swing.JCheckBox obj5;
    private javax.swing.JPanel panelslider;
    private javax.swing.JSlider slidernew;
    private javax.swing.JCheckBox threshold;
    public static javax.swing.JTextField thresholdd;
    public static javax.swing.JTextField thresholdd1;
    private javax.swing.JTextField txtdata3;
    private javax.swing.JTextField txtdirecotry;
    private javax.swing.JTextField txtdirecotry2;
    // End of variables declaration//GEN-END:variables

    private void copyFile(InputStream in, FileOutputStream out) throws IOException {
        byte[] buffer = new byte[1024];
        int read;
        while ((read = in.read(buffer)) != -1) {
            out.write(buffer, 0, read);

        }
    }

}
