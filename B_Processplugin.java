/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import ij.IJ;
import static ij.IJ.getClassLoader;
import static ij.IJ.getImage;
import static ij.IJ.selectWindow;
import ij.ImagePlus;
import ij.Prefs;
import ij.WindowManager;
import ij.plugin.frame.RoiManager;
import java.awt.Button;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Label;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFrame;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import static java.lang.System.in;
import java.net.URL;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.filechooser.FileNameExtensionFilter;
//import pimpathon.FileUtils;
import sun.misc.IOUtils;
import weka.core.PropertyPath.Path;
/**
 *
 * @author usuario
 */
public class B_Processplugin extends javax.swing.JInternalFrame {
public String bellow;
    public String image;
    private Object directory;
    private ij.ImagePlus imp;
    private String path;
    private String name;
    private Button Open;
    FileOutputStream fop = null;
    File file;
    private String name1;
    private String name2;
    private String name3;
    private Object FileConverter;
    public String prova;
    public String valor1;
    public String valor2;
    public String text;
    public String absolutePath;
    public String tempFilePath;
    private Object interval;
    private ArrayList<String> list = new ArrayList<String>();
    public String liststring;
    private ArrayList<String> list1 = new ArrayList<String>();
    public String text1;
    /**
     * Creates new form A_Processplugin
     */
    public B_Processplugin() {
        super("MITOsize");
        initComponents();
        
        
        
        editor.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
        editor.setEditable(false);
        editor.setOpaque(false);
        editor.setText("Welcome to <a href='http://www.uab.cat/web/universitat-autonoma-de-barcelona-1345467954409.html'>UAB homepage</a> & to <a href='inc.uab.cat/English/index.php#!/Jesus'>Systems pharmacology and bioinformatics lab homepage</a>. ");
        editor.addHyperlinkListener(new HyperlinkListener() {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent hle) {
                if (HyperlinkEvent.EventType.ACTIVATED.equals(hle.getEventType())) {
                    System.out.println(hle.getURL());
                    Desktop desktop = Desktop.getDesktop();
                    try {
                        desktop.browse(hle.getURL().toURI());
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        slidernew1 = new javax.swing.JSlider();
        jButton14 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        thresholdd2 = new javax.swing.JTextField();
        threshold1 = new javax.swing.JCheckBox();
        interval5 = new javax.swing.JTextField();
        thresholdd3 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        interval6 = new javax.swing.JTextField();
        interval7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        panelslider1 = new javax.swing.JPanel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        obj6 = new javax.swing.JCheckBox();
        obj7 = new javax.swing.JCheckBox();
        obj8 = new javax.swing.JCheckBox();
        obj9 = new javax.swing.JCheckBox();
        obj10 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        label2 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editor = new javax.swing.JEditorPane();
        txtdirecotry2 = new javax.swing.JTextField();
        txtdirecotry = new javax.swing.JTextField();
        txtdata3 = new javax.swing.JTextField();

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/directory.png"))); // NOI18N
        jButton2.setText("Set output directory ");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/load.png"))); // NOI18N
        jButton1.setText("Load Image");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton3.setText("Display all mitochondria within your selection");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        slidernew1.setMajorTickSpacing(1);
        slidernew1.setMaximum(120);
        slidernew1.setMinimum(15);
        slidernew1.setMinorTickSpacing(5);
        slidernew1.setPaintTicks(true);
        slidernew1.setSnapToTicks(true);
        slidernew1.setToolTipText("");
        slidernew1.setValue(15);
        slidernew1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slidernew1slider(evt);
            }
        });
        slidernew1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slidernew1MouseDragged(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton14.setText("Display thel mitochondria within your own interval");
        jButton14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        thresholdd2.setBackground(new java.awt.Color(232, 232, 232));
        thresholdd2.setForeground(new java.awt.Color(153, 153, 153));
        thresholdd2.setText("pixels");
        thresholdd2.setBorder(null);
        thresholdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdd2ActionPerformed(evt);
            }
        });
        thresholdd2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdd2newslider(evt);
            }
        });

        threshold1.setSelected(true);
        threshold1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threshold1ActionPerformed(evt);
            }
        });

        interval5.setBackground(new java.awt.Color(232, 232, 232));
        interval5.setForeground(new java.awt.Color(153, 153, 153));
        interval5.setText("20.000");
        interval5.setBorder(null);
        interval5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval5ActionPerformed(evt);
            }
        });
        interval5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                interval5newslider(evt);
            }
        });

        thresholdd3.setBackground(new java.awt.Color(232, 232, 232));
        thresholdd3.setForeground(new java.awt.Color(153, 153, 153));
        thresholdd3.setText(" Your threshold is above ");
        thresholdd3.setBorder(null);
        thresholdd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdd3ActionPerformed(evt);
            }
        });
        thresholdd3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thresholdd3newslider(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(threshold1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(interval5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(interval5)
                    .addComponent(thresholdd3)
                    .addComponent(threshold1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(thresholdd2))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slidernew1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slidernew1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Threshold Selector", jPanel5);

        jLabel8.setText("Upper limit");

        interval6.setForeground(new java.awt.Color(153, 153, 153));
        interval6.setText("20.000");
        interval6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval6ActionPerformed(evt);
            }
        });

        interval7.setForeground(new java.awt.Color(153, 153, 153));
        interval7.setText("1.000E16");
        interval7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interval7ActionPerformed(evt);
            }
        });

        jLabel9.setText("Lower limit");

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prueba1.png"))); // NOI18N
        jButton12.setText("Display thel mitochondria within your own interval");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelslider1Layout = new javax.swing.GroupLayout(panelslider1);
        panelslider1.setLayout(panelslider1Layout);
        panelslider1Layout.setHorizontalGroup(
            panelslider1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelslider1Layout.setVerticalGroup(
            panelslider1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 75, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(interval6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(interval7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)))
                        .addGap(18, 18, 18)
                        .addComponent(panelslider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton12)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(panelslider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(interval6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(interval7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane2.addTab("Range selection", jPanel7);

        jDesktopPane3.setBackground(new java.awt.Color(232, 232, 232));
        jDesktopPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        obj6.setSelected(true);
        obj6.setText("fit ellipse");
        obj6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obj6ActionPerformed(evt);
            }
        });

        obj7.setSelected(true);
        obj7.setText("perimeter");

        obj8.setSelected(true);
        obj8.setText("area");
        obj8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obj8ActionPerformed(evt);
            }
        });

        obj9.setSelected(true);
        obj9.setText("shape descriptions");

        obj10.setSelected(true);
        obj10.setText("centroid");

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(obj8)
                    .addComponent(obj10)
                    .addComponent(obj7)
                    .addComponent(obj6)
                    .addComponent(obj9))
                .addContainerGap())
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(obj8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obj9)
                .addContainerGap())
        );
        jDesktopPane3.setLayer(obj6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(obj7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(obj8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(obj9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(obj10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane2.addTab("Output Settings", jDesktopPane3);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/machine.png"))); // NOI18N
        jButton8.setText("Advanced Machine learning classification ");
        jButton8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Untitled-4.png"))); // NOI18N
        jButton15.setText("Clear Results");
        jButton15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        label2.setText("Mitochondria  identification & quantification by Agustin Bruzzese Novoa & James Dalton");

        jLabel2.setText("Institute of Neurosciencies ");

        jLabel3.setText("   UAB");

        jScrollPane1.setViewportView(editor);

        txtdirecotry2.setEditable(false);
        txtdirecotry2.setBackground(new java.awt.Color(255, 255, 255));
        txtdirecotry2.setForeground(new java.awt.Color(153, 153, 153));
        txtdirecotry2.setText("(Your image input)");
        txtdirecotry2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirecotry2ActionPerformed(evt);
            }
        });

        txtdirecotry.setEditable(false);
        txtdirecotry.setBackground(new java.awt.Color(255, 255, 255));
        txtdirecotry.setForeground(new java.awt.Color(153, 153, 153));
        txtdirecotry.setText("(Your directory file output)");
        txtdirecotry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirecotryActionPerformed(evt);
            }
        });

        txtdata3.setEditable(false);
        txtdata3.setBackground(new java.awt.Color(255, 255, 255));
        txtdata3.setForeground(new java.awt.Color(153, 153, 153));
        txtdata3.setText("(Your file has been saved in ...)");
        txtdata3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdata3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtdirecotry2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdirecotry, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdata3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(147, 147, 147)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(206, 206, 206)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(175, 175, 175)
                                    .addComponent(jLabel2))
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton15)))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(73, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(txtdirecotry2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtdirecotry, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtdata3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(251, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser(".");
        chooser.setApproveButtonText("OK");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        Component fileChooserDialog = null;
        chooser.showOpenDialog(fileChooserDialog);
        this.path = chooser.getSelectedFile().getAbsolutePath();
        txtdirecotry.setText(chooser.getSelectedFile().getName());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String prova = IJ.getFilePath("");
        IJ.open(prova);

        this.name2 = getImage().getTitle();
        /*this.name2 = prova.replaceFirst("[.][^.]+$", "");
        imp.setTitle(this.name2);*/

        /*IJ.open(prova);
        IJ.setTool("freehand");

        this.name2 = IJ.getImage().getTitle();
        this.name2 = prova.replaceFirst("[.][^.]+$", "");
        String prova = IJ.getFilePath("");
        ImagePlus imp = IJ.openImage(prova);
        imp.show();
        */
        txtdirecotry2.setText(this.name2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        IJ.run("Clear Results");
        selectWindow(this.name2);
        this.name2 = IJ.getImage().getTitle();
        this.name3 = this.name2.replaceFirst("[.][^.]+$", "");
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        IJ.run("Set Measurements...", "area shape fit redirect=None decimal=5");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        IJ.run("Analyze Particles...", "size=20.00-1.000E16 pixel show=Outlines display include summarize add");
        IJ.saveAs("tif", this.path + File.separator + this.name3+ "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }
        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        txtdata3.setText(this.path + File.separator + dest_filename2);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to classify your results with our machin learning model of classification?", "Machine learning", dialogButton, JOptionPane.WARNING_MESSAGE);
        if (dialogResult == 0) {
            Class<?> clazz = classificationPLugin.class;
        String url = clazz.getResourceAsStream("/" + clazz.getName().replace('.', '/') + ".class").toString();
        String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
        System.setProperty("plugins.dir", pluginsDir);
        IJ.runPlugIn(clazz.getName(), "");
            classificationPLugin nf1 = new classificationPLugin();
            classificationPLugin.txtdirecotry2.setText(this.txtdata3.getText());
            nf1.setVisible(true);

        } else {
            System.out.println("No Option");

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtdirecotryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirecotryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirecotryActionPerformed

    private void txtdirecotry2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirecotry2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirecotry2ActionPerformed

    private void slidernewslider(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidernewslider
        interval5.setText(Integer.toString(slidernew1.getValue()));
        System.out.println(Integer.toString(slidernew1.getValue()));
    }//GEN-LAST:event_slidernewslider

    private void slidernewMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slidernewMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_slidernewMouseDragged

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (threshold1.isSelected()) {
            //this.list1.add(sfsfsa);
            this.bellow = interval5.getText() + " - 1.000E16 pixel";
            System.out.println(bellow);
        } else {
            this.bellow = "15.00 - " + interval5.getText();
            System.out.println(bellow);
        }

        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj6.isSelected()) {
            this.list.add("area");
        }

        if (obj7.isSelected()) {
            this.list.add("centroid");
        }
        if (obj8.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj9.isSelected()) {
            this.list.add("fit");
        }
        if (obj10.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval6.getText();
        this.valor2 = this.interval7.getText();
        this.text1 = "size= " + this.bellow + " show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text1);
        IJ.saveAs("tif", this.path + File.separator + this.image + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to classify your results with our machin learning model of classification?", "Machine learning", dialogButton, JOptionPane.WARNING_MESSAGE);
        if (dialogResult == 0) {
            Class<?> clazz = classificationPLugin.class;
            String url = clazz.getResource("/" + clazz.getName().replace('.', '/') + ".class").toString();
            String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
            System.setProperty("plugins.dir", pluginsDir);
            IJ.runPlugIn(clazz.getName(), "");
           
            classificationPLugin nf1 = new classificationPLugin();
            classificationPLugin.txtdirecotry2.setText(this.txtdirecotry2.getText());
            nf1.setVisible(true);

        } else {
            System.out.println("No Option");

        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void thresholdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd1ActionPerformed

    private void thresholdd1newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdd1newslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd1newslider

    private void thresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdActionPerformed
        if (threshold1.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd3.setText("Your threshold is above ");
        } else {
            thresholdd3.setText("Your threshold is bellow");
        }
    }//GEN-LAST:event_thresholdActionPerformed

    private void interval4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval4ActionPerformed

    private void interval4newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_interval4newslider
        /*if (threshold.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd.setText("Your threshold is above "+interval4.getText()+" pixels");
        } else {
            thresholdd.setText("Your threshold is bellow "+interval4.getText()+" pixels");
        }*/
    }//GEN-LAST:event_interval4newslider

    private void thresholddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholddActionPerformed

    private void thresholddnewslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholddnewslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholddnewslider

    private void interval3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval3ActionPerformed

    private void interval2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval2ActionPerformed

    }//GEN-LAST:event_interval2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj6.isSelected()) {
            this.list.add("area");
        }

        if (obj7.isSelected()) {
            this.list.add("centroid");
        }
        if (obj8.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj9.isSelected()) {
            this.list.add("fit");
        }
        if (obj10.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval6.getText();
        this.valor2 = this.interval7.getText();
        this.text = "size= " + this.valor1 + " - " + this.valor2 + " pixel show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text);
        IJ.saveAs("tif", this.path + File.separator + this.image + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }

        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void obj4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj4ActionPerformed

    private void obj1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Class<?> clazz = A_MachineLearningMenu.class;
        String url = clazz.getResource("/" + clazz.getName().replace('.', '/') + ".class").toString();
        String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
        System.setProperty("plugins.dir", pluginsDir);
        IJ.runPlugIn(clazz.getName(), "");
        new A_MachineLearningMenu();
        new A_MachineLearningMenu().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        IJ.run("Clear Results");
        IJ.run("Clear Results");
        IJ.run("Close All", "");

        if (WindowManager.getFrame("Results") != null) {
            IJ.selectWindow("Results");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("Summary") != null) {
            IJ.selectWindow("Summary");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("Results") != null) {
            IJ.selectWindow("Results");
            IJ.run("Close");
        }
        if (WindowManager.getFrame("ROI Manager") != null) {
            IJ.selectWindow("ROI Manager");
            IJ.run("Close");
        }
        IJ.run("Close All", "roiManager");// TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void obj8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj8ActionPerformed

    private void obj6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obj6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obj6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        this.list.clear();
        if (obj6.isSelected()) {
            this.list.add("area");
        }

        if (obj7.isSelected()) {
            this.list.add("centroid");
        }
        if (obj8.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj9.isSelected()) {
            this.list.add("fit");
        }
        if (obj10.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        IJ.run("Set Measurements...", measur);
        selectWindow(this.name2);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval6.getText();
        this.valor2 = this.interval7.getText();
        this.text = "size= " + this.valor1 + " - " + this.valor2 + " pixel show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text);
        IJ.saveAs("tif", this.path + File.separator + this.image + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }
                selectWindow(this.name2);
        this.name2 = IJ.getImage().getTitle();
        this.name2 = this.name2.replaceFirst("[.][^.]+$", "");
        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void interval7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval7ActionPerformed

    }//GEN-LAST:event_interval7ActionPerformed

    private void interval6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval6ActionPerformed

    private void thresholdd3newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdd3newslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd3newslider

    private void thresholdd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdd3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd3ActionPerformed

    private void interval5newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_interval5newslider
        /*if (threshold.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd.setText("Your threshold is above "+interval4.getText()+" pixels");
        } else {
            thresholdd.setText("Your threshold is bellow "+interval4.getText()+" pixels");
        }*/
    }//GEN-LAST:event_interval5newslider

    private void interval5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interval5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interval5ActionPerformed

    private void threshold1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threshold1ActionPerformed
        if (threshold1.isSelected()) {
            //this.list1.add(sfsfsa);
            thresholdd3.setText("Your threshold is above ");
        } else {
            thresholdd3.setText("Your threshold is bellow");
        }
    }//GEN-LAST:event_threshold1ActionPerformed

    private void thresholdd2newslider(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thresholdd2newslider
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd2newslider

    private void thresholdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdd2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (threshold1.isSelected()) {
            //this.list1.add(sfsfsa);
            this.bellow = interval5.getText() + " - 1.000E16 pixel";
            System.out.println(bellow);
        } else {
            this.bellow = "15.00 - " + interval5.getText();
            System.out.println(bellow);
        }
        this.list.clear();
        if (obj6.isSelected()) {
            this.list.add("area");
        }

        if (obj7.isSelected()) {
            this.list.add("centroid");
        }
        if (obj8.isSelected()) {
            this.list.add("perimeter");
        }
        if (obj9.isSelected()) {
            this.list.add("fit");
        }
        if (obj10.isSelected()) {
            this.list.add("shape");
        }
        this.list.removeAll(Arrays.asList("", null));
        System.out.println(this.list);
        this.liststring = "";
        for (String s : this.list) {
            this.liststring += s + " ";
        }
        System.out.println(this.liststring);
        String measur = this.liststring + " limit display add redirect=None decimal=5 ";
        System.out.println(measur);
        IJ.run("Set Measurements...", measur);
        selectWindow(this.name2);
        RoiManager rm = RoiManager.getInstance();
        IJ.run("Duplicate...", this.name2);
        selectWindow(this.name2);
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Enhance Contrast...", "saturated=25 equalize");
        IJ.run("Subtract Background...", "rolling=1.5");
        IJ.run("Convolve...", "text1=[-1 -3 -4 -3 -1\n-3 0 6 0 -3\n-4 6 50 6 -4\n-3 0 6 0 -3\n-1 -3 -4 -3 -1\n] normalize");
        IJ.run("8-bit", "");
        IJ.run("Restore Selection", "");
        IJ.run("Make Binary", "");
        Prefs.blackBackground = false;
        IJ.run("Convert to Mask", "");
        IJ.run("Restore Selection", "");
        this.valor1 = this.interval6.getText();
        this.valor2 = this.interval7.getText();
        this.text1 = "size=" + this.bellow + "show=Outlines display include summarize add";
        IJ.run("Analyze Particles...", this.text1);
        IJ.saveAs("tif", this.path + File.separator + this.image + "_processed");
        String dest_filename1, dest_filename2, full;
        selectWindow("Results");
        dest_filename1 = this.name2 + "_complete.txt";
        dest_filename2 = this.name2 + "_complete.csv";
        if (WindowManager.getFrame(this.name2 + "-1") != null) {
            IJ.selectWindow(this.name2 + "-1");
            IJ.run("Close");
        }
        IJ.saveAs("Results", this.path + File.separator + dest_filename1);
        IJ.run("Input/Output...", "jpeg=85 gif=-1 ile=.csv copy_row save_column save_row");
        IJ.saveAs("Results", this.path + File.separator + dest_filename2);
        IJ.run("Restore Selection");
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to classify your results with our machin learning model of classification?", "Machine learning", dialogButton, JOptionPane.WARNING_MESSAGE);
        if (dialogResult == 0) {
            Class<?> clazz = classificationPLugin.class;
            String url = clazz.getResource("/" + clazz.getName().replace('.', '/') + ".class").toString();
            String pluginsDir = url.substring(5, url.length() - clazz.getName().length() - 6);
            System.setProperty("plugins.dir", pluginsDir);
            IJ.runPlugIn(clazz.getName(), "");
           
            classificationPLugin nf1 = new classificationPLugin();
            classificationPLugin.txtdirecotry2.setText(this.txtdirecotry2.getText());
            nf1.setVisible(true);

        } else {
            System.out.println("No Option");

        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void slidernew1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slidernew1MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_slidernew1MouseDragged

    private void slidernew1slider(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidernew1slider
        interval5.setText(Integer.toString(slidernew1.getValue()));
        System.out.println(Integer.toString(slidernew1.getValue()));
    }//GEN-LAST:event_slidernew1slider

    private void txtdata3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdata3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdata3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editor;
    public static javax.swing.JTextField interval5;
    public static javax.swing.JTextField interval6;
    public static javax.swing.JTextField interval7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private java.awt.Label label2;
    private javax.swing.JCheckBox obj10;
    private javax.swing.JCheckBox obj6;
    private javax.swing.JCheckBox obj7;
    private javax.swing.JCheckBox obj8;
    private javax.swing.JCheckBox obj9;
    private javax.swing.JPanel panelslider1;
    private javax.swing.JSlider slidernew1;
    private javax.swing.JCheckBox threshold1;
    public static javax.swing.JTextField thresholdd2;
    public static javax.swing.JTextField thresholdd3;
    private javax.swing.JTextField txtdata3;
    private javax.swing.JTextField txtdirecotry;
    private javax.swing.JTextField txtdirecotry2;
    // End of variables declaration//GEN-END:variables
}
